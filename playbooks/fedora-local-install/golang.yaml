- name: Local install of golang
  hosts: localhost
  gather_facts: true

  tasks:
    - name: Download latest go version
      ansible.builtin.uri:
        url: https://go.dev/dl/?mode=json
        return_content: true
      register: response_url

    - name: Show the info of latest go version
      ansible.builtin.debug:
        var: response_url.json[0].version

    - name: Extract go version from json output
      ansible.builtin.set_fact:
        go_latest_stable_version: "{{ response_url.json[0].version }}"

    - name: Extract go sha256 from linux amd64 installer
      ansible.builtin.set_fact:
        go_sha256: "{{ response_url.json[0].files[14].sha256 }}"

    - name: Verify version
      ansible.builtin.debug:
        msg:
          - "{{ go_latest_stable_version }}"
          - "{{ go_sha256 }}"

    - name: Download source code with checksum (sha256)
      ansible.builtin.get_url:
        url: https://go.dev/dl/{{ go_latest_stable_version }}.linux-amd64.tar.gz
        dest: "{{ ansible_env.HOME }}/Downloads/ansible"
        checksum: "sha256:{{ go_sha256 }}"
        mode: '0644'

    - name: Remove old golang install
      become: true
      ansible.builtin.shell:
        cmd: "rm -rf /usr/local/go && tar -C /usr/local -xzf {{ go_latest_stable_version }}.linux-amd64.tar.gz"
        chdir: "{{ ansible_env.HOME }}/Downloads/ansible"

    - name: Ensure export path environment variable is present
      ansible.builtin.lineinfile:
        state: present
        path: "{{ ansible_env.HOME }}/.bashrc.d/ansible-path-executable.bashrc"
        line: export PATH=$PATH:/usr/local/go/bin

    - name: Source environment variable
      ansible.builtin.shell: source "{{ ansible_env.HOME }}/.bashrc"
      args:
        executable: /bin/bash

    - name: Check go command
      ansible.builtin.command:
        cmd: go version
